% set up path
addpath(genpath('/auto/k2/share/matlab/fet/Neural Discrimination'))
addpath(genpath('/auto/k2/share/matlab/fet/P Data Base Tools'))

% Runs the neural discrimination for normal L
brainregion = 'maybe_L';
stimtype = 'conspecific';
n_ensemble = 3;

% All the data files pasted from the Excel file
fieldL_normal = { ...
%     {'yy0304', '3_B' }, ... 
%     {'blahpi0303', '5_B'}, ...
%     {'blahpi0303', '7_B' }, ...
%     {'blahpi0303', '8_B' }, ...
%     {'blahpi0303', '9_B' }, ...
%     {'blahpi0303', '10_B' }, ...
    {'publu0717', '3_B' }, ...
    {'publu0717', '6_B' }, ...
    {'publu0717', '7_B' }, ...
    {'publu0717', '9_B' }, ...
    {'lghp1616', '4_B' }, ...
    {'lghp1616', '5_B' }, ...
    {'lghp1616', '6_B' }, ...
    {'lghp1616', '7_B' }, ...
    {'lghp1616', '8_B' }, ...
    {'lghp1616', '9_B' }, ...
    {'lghp1616', '10_B' }, ...
    {'pipu1018', '1_B' }, ... 
    {'pipu1018', '2_B' }, ... 
    {'pipu1018', '3_B' }, ...
    {'pipu1018', '4_B' }, ...
    {'pipu1018', '6_B' }, ...
    {'pipu1018', '7_B' }, ...
    {'pipu1018', '11_B' }, ... 
    {'lblb0808', '3_B' }, ...
    {'gg0304', '4_B' }, ...
    {'gg0304', '6_B' }, ...
    {'gg0304', '8_B' }, ...
    {'gg0304', '9_B' }, ...
    {'gg0304', '10_B' }, ...
    {'pipu0617', '3_B' }, ...
    {'pipu0617', '4_B' }, ...
    {'pipu0617', '5_B' }, ...
    {'pipu0617', '7_B' }, ...
    {'pipu0617', '8_B' }, ...
    {'pipu0617', '9_B' }, ...
    {'pipu0617', '10_B' }, ...
    {'yg0111', '2_B' }, ...
    {'yg0111', '3_B' }, ...
    {'yg0111', '4_B' }, ...
    {'yg0111', '5_B' }, ...
    {'yg0111', '6_B' }, ...
    {'yg0111', '7_B' }, ...
    {'yg0111', '8_B' }, ...
    {'yg0111', '9_B' }, ...
    {'yg0111', '10_B' }, ...
    {'yg0331', '2_B' }, ...
    {'yg0331', '3_B' }, ...
    {'yg0331', '4_B' }, ...
    {'yg0331', '5_B' }, ...
    {'yg0331', '8_B' }, ...
    {'yg0331', '9_B' }, ...
    {'yg0331', '10_B' }, ...
    {'yg0616', '8_B' }, ...
    {'yg0616', '9_B' }, ...
    {'yg0616', '10_B' }, ...
    {'yg0616', '11_B' }, ...
    {'yg0616', '12_B' }, ...
    {'blublu9394', '2_B' }, ...
    {'blublu9394', '3_B' }, ...
    {'blublu9394', '4_B' }, ...
    {'blublu9394', '5_B' }, ...
    {'blublu9394', '7_B' }, ...
    {'blahpi0808', '4_B' }, ...
    {'blahpi0808', '6_B' }, ... 
    {'blahpi0808', '7_B' } };

number_cells = length(fieldL_normal);

if (n_ensemble > number_cells)
    fprintf(1,'Number of cells in ensemble %d greater than the number of cells in database %d\n', n_ensemble, number_cells);
    n_ensemble = number_cells;
end

% Obtain a permutation of n_ensemble neurons
%n_choose = 1:n_ensemble; 
n_choose = randperm(number_cells);

clear cellid
for i=1:n_ensemble
    cellid(i).birdname = fieldL_normal{n_choose(i)}{1};
    cellid(i).cellname = fieldL_normal{n_choose(i)}{2};
    cellid(i).brainregion = brainregion;
end

output_ensemble = neural_discrimination_ensemble(cellid, stimtype, 1000, []);

for i=1:n_ensemble
    output_single(i) = neural_discrimination_ensemble(cellid(i), stimtype, output_ensemble.maxrep, output_ensemble.stim_names);
end

save fieldL_ensemble_neural_discrimination.mat cellid output_ensemble output_single;

disp('Ensemble percent correct:')
disp(output_ensemble.percorrectB)

disp('Single percent correct:')
disp([output_single.percorrectB])

disp('Ensemble MI:')
disp(output_ensemble.mizdistSB)

disp('Single MI:')
disp([output_single.mizdistSB])
