% Runs the neural discrimination for normal L
brainregion = 'sure_OV';
fname = 'Ov_conMLnoise.txt';

% All the data files pasted from the Excel file
ov_singleunits = { ...
    {'pupi0414', '1' }, ...
    ...%{'pupi0414', '2'}, ... %note only conspecific for this cell, which gives errors when you read it for mlnoise, so let's comment this cell out.
    {'pupi0414', '3' }, ...
    ...%{'pupi0414', '8' }, ... %for some reason, this guy's conspecific not being read, so commenting out for the moment.
    {'pupi0414', '9' }, ...
    {'pupi0414', '10' }, ...
    {'glb5202', '5' }, ...
    {'glb5202', '6' }, ...
    {'glb5202', '7' }, ...
    {'glb5656', '2' }, ... %note that this bird glb5656 has file names that are glb5202 from last bird
    {'glb5656', '3' }, ... %ditto for this cell and all cells for this bird
    {'glb5656', '4' }, ... %this cell had both S1 and M, and I think only con was played for M, so use S1...
    {'glb5656', '5' }, ... 
    {'blahp4108', '4' }, ...
    {'blahp4108', '5' }, ...
    {'obla1305', '8' }, ...
    {'obla17102', '2' }, ...
    {'obla17102', '7' }, ... %{'gr0869', '2' }, ... %this cell ran 2 blocks of same stimuli to capture more spikes, so didn't end up STRFing, so not in STRF database...
    {'gr0869', '5' }, ...
    {'gr0965', '4' }, ...
    {'gr0965', '6' }, ...
    {'gr1070', '1' }, ...
    {'gr1070', '2' }, ...
    {'gr1070', '3' }, ...
    {'gr1070', '4' }, ...
    {'blugr1612', '4' }, ... %both cells 4 and 5 seem crappy for STRFs, so wondering whether should leave 'em in the database...
    {'blugr1612', '5' }}; %both cells 4 and 5 seem crappy for STRFs, so wondering whether should leave 'em in the database...

ov_twounits = { ...
    {'pupi0414', '6' }, ...
    {'pupi0414', '7' }, ...
    {'glb5202', '9' }, ...
    {'obla1305', '4' }, ...
    {'obla1305', '5' }, ... 
    {'obla1305', '6' }, ...
    {'obla1305', '7' }, ...
    {'blahp9904', '6' }, ...
    {'gr0869', '8' }, ...
    {'gr0869', '9' }, ...
    {'gr0965', '1' }, ...
    {'gr0965', '2' }, ...
    {'gr0965', '5' }, ...
    {'gr1070', '5' }, ...
    {'blugr1612', '3' }};

ov_multiunits = { ...
    {'pupi0414', '5' }, ... %kicking in trial 14, but should be okay to run...
    {'blahp9904', '7' }, ...
    {'blahp9904', '8' }, ...
    {'blahp9904', '9' }, ...
    {'obla17102', '4' }, ...
    {'obla17102', '5' }, ...
    {'obla17102', '6' }, ...
    {'obla17102', '8' }, ...
    {'obla17102', '9' }, ...
    {'obla17102', '10' }, ... 
    ... %{'gr0869', '7' }, ... %this one only has 11 trials, so didn't STRF, so probably not in database...
    {'gr0869', '10' }, ...
    {'gr0869', '11' }, ...
    {'gr0965', '3' }, ...
    {'gr0965', '7' }, ...
    {'blugr1612', '2' }}; 

ov_allunits = { ...
    {'pupi0414', '1' }, ...
    ...%{'pupi0414', '2'}, ...%note only conspecific for this cell, which gives errors when you read it for mlnoise, so let's comment this cell out.
    {'pupi0414', '3' }, ...
    ...%{'pupi0414', '8' }, ...%note this guy's con not being read for some reason, so just commenting out for this time.
    {'pupi0414', '9' }, ...
    {'pupi0414', '10' }, ...
    {'glb5202', '5' }, ...
    {'glb5202', '6' }, ...
    {'glb5202', '7' }, ...
    {'glb5656', '2' }, ... %note that this bird glb5656 has file names that are glb5202 from last bird
    {'glb5656', '3' }, ... %ditto for this cell and all cells for this bird
    {'glb5656', '4' }, ... %this cell had both S1 and M, and I think only con was played for M, so use S1...
    {'glb5656', '5' }, ... 
    {'blahp4108', '4' }, ...
    {'blahp4108', '5' }, ...
    {'obla1305', '8' }, ...
    {'obla17102', '2' }, ...
    {'obla17102', '7' }, ...
    ...%{'gr0869', '2' }, ... %this cell ran 2 blocks of same stimuli to capture more spikes, so didn't end up STRFing, so not in STRF database...
    {'gr0869', '5' }, ...
    {'gr0965', '4' }, ...
    {'gr0965', '6' }, ...
    {'gr1070', '1' }, ...
    {'gr1070', '2' }, ...
    {'gr1070', '3' }, ...
    {'gr1070', '4' }, ...
    {'blugr1612', '4' }, ... %both cells 4 and 5 seem crappy for STRFs, so wondering whether should leave 'em in the database...
    {'blugr1612', '5' }, ... %both cells 4 and 5 seem crappy for STRFs, so wondering whether should leave 'em in the database...
    {'pupi0414', '6' }, ...
    {'pupi0414', '7' }, ...
    {'glb5202', '9' }, ...
    {'obla1305', '4' }, ...
    {'obla1305', '5' }, ... 
    {'obla1305', '6' }, ...
    {'obla1305', '7' }, ...
    {'blahp9904', '6' }, ...
    {'gr0869', '8' }, ...
    {'gr0869', '9' }, ...
    {'gr0965', '1' }, ...
    {'gr0965', '2' }, ...
    {'gr0965', '5' }, ...
    {'gr1070', '5' }, ...
    {'blugr1612', '3' }, ...
    {'pupi0414', '5' }, ... %kicking in trial 14, but should be okay to run...
    {'blahp9904', '7' }, ...
    {'blahp9904', '8' }, ...
    {'blahp9904', '9' }, ...
    {'obla17102', '4' }, ...
    {'obla17102', '5' }, ...
    {'obla17102', '6' }, ...
    {'obla17102', '8' }, ...
    {'obla17102', '9' }, ...
    {'obla17102', '10' }, ...
    ...%{'gr0869', '7' }, ... %this one only has 11 trials, so didn't STRF, so probably not in database...
    {'gr0869', '10' }, ...
    {'gr0869', '11' }, ...
    {'gr0965', '3' }, ...
    {'gr0965', '7' }, ...
    {'blugr1612', '2' }}; 



%starting here again....
% Allocate space for output values
number_cells = length(ov_allunits);

nfiles_con = zeros(1, number_cells);
zscore_con = zeros(1, number_cells);
stdz_con = zeros(1, number_cells);
dprime_con = zeros(1, number_cells);
stdd_con = zeros(1, number_cells);
p_con = zeros(4, number_cells);
rank_con = zeros(4, number_cells);
info_con =  zeros(1, number_cells);
noiseinfo_con = zeros(1, number_cells);
rateinfo_con = zeros(1, number_cells);

nfiles_mlnoise = zeros(1, number_cells);
zscore_mlnoise = zeros(1, number_cells);
stdz_mlnoise = zeros(1, number_cells);
dprime_mlnoise = zeros(1, number_cells);
stdd_mlnoise = zeros(1, number_cells);
p_mlnoise = zeros(4, number_cells);
rank_mlnoise = zeros(4, number_cells);
info_mlnoise =  zeros(1, number_cells);
noiseinfo_mlnoise = zeros(1, number_cells);
rateinfo_mlnoise = zeros(1, number_cells);

% Allocate file names for the temp results
done_con_name = cell(1,number_cells);
done_mlnoise_name = cell(1,number_cells);

for nc=1:number_cells
    stimtype = 'conspecific';
    done_con_name{nc} = sprintf('%s_%s_%s_%s.mat' , ov_allunits{nc}{1}, brainregion, ov_allunits{nc}{2}, stimtype);
    stimtype = 'flatrip';
    done_mlnoise_name{nc} = sprintf('%s_%s_%s_%s.mat' , ov_allunits{nc}{1}, brainregion, ov_allunits{nc}{2}, stimtype);
end

not_done = 1;
n_loop = 0;
njobs = 0;
% Add jobs to queue until done
while not_done
    not_done = 0;
    for nc=1:number_cells
        stimtype = 'conspecific';
        if (exist(done_con_name{nc},'file') == 0)
            the_command = sprintf('cd(''/auto/fdata/noopur/Ov/analysis''); neural_discrimination_queue(''%s'', ''%s'', ''%s'', ''%s'')', ov_allunits{nc}{1}, brainregion, ov_allunits{nc}{2}, stimtype);
            the_comment = sprintf('ND%s%s%s%s',ov_allunits{nc}{1}, brainregion, ov_allunits{nc}{2}, stimtype);
            njobs = njobs +1;
            qid_submitted(njobs) = dbaddqueuemaster(the_command, the_comment);
            not_done = 1;
            if n_loop
                fprintf(1, 'Job %s not finished after loop %d\n', the_comment, n_loop);
            end
        end
        stimtype = 'flatrip';
        if (exist(done_mlnoise_name{nc},'file') == 0)
            the_command = sprintf('cd(''/auto/fdata/noopur/Ov/analysis''); neural_discrimination_queue(''%s'', ''%s'', ''%s'', ''%s'')', ov_allunits{nc}{1}, brainregion, ov_allunits{nc}{2}, stimtype);
            the_comment = sprintf('ND%s%s%s%s',ov_allunits{nc}{1}, brainregion, ov_allunits{nc}{2}, stimtype);
            njobs = njobs +1;
            qid_submitted(njobs) = dbaddqueuemaster(the_command, the_comment);
            not_done = 1;
            if n_loop
                fprintf(1, 'Job %s not finished after loop %d\n', the_comment, n_loop);
            end
        end
    end
    if not_done
        pause(20*60); % pause for 20 minutes
    end
    n_loop = n_loop +1;
end

% Clean the queue
for ij=1:njobs
    silent_dbdeletequeue(qid_submitted(ij));
end

% Print the results to a text file
fid = fopen(fname, 'w');
fprintf(fid,'Bird\tCell\tNstim con\tNstim mlnoise\tZscore con\tZscore mlnoise\tZstd con\tZstd mlnoise\tDprime con\tDprime mlnoise\tDstd con\tDstd mlnoise\tP con\tP mlnoise\tRank con\tRank mlnoise\tInfo con\tInfo mlnoise\tIstd con\tIstd mlnoise\trateinfo con\trateinfo mlnoise\n');
for nc=1:number_cells
    
    load(done_con_name{nc});
    nfiles_con(nc) = outputs.nfiles;
    zscore_con(nc) = outputs.avgzscore;
    stdz_con(nc) = outputs.stdzscore;
    dprime_con(nc) = outputs.avgdprime;
    stdd_con(nc) = outputs.stddprime;
    p_con(:,nc) = outputs.percorrect';
    rank_con(:,nc) = outputs.avgrank';
    info_con(nc) = outputs.info;
    noiseinfo_con(nc) = outputs.noiseinfo;
    rateinfo_con(nc) = outputs.rateinfo;

    load(done_mlnoise_name{nc});
    nfiles_mlnoise(nc) = outputs.nfiles;
    zscore_mlnoise(nc) = outputs.avgzscore;
    stdz_mlnoise(nc) = outputs.stdzscore;
    dprime_mlnoise(nc) = outputs.avgdprime;
    stdd_mlnoise(nc) = outputs.stddprime;
    p_mlnoise(:,nc) = outputs.percorrect';
    rank_mlnoise(:,nc) = outputs.avgrank';
    info_mlnoise(nc) = outputs.info;
    noiseinfo_mlnoise(nc) = outputs.noiseinfo;
    rateinfo_mlnoise(nc) = outputs.rateinfo;
    
    fprintf(fid,'%s\t%s\t%d\t%d\t%f\t%f\t%f\t%f\t%f\t%f\t%f\t%f\t%f\t%f\t%f\t%f\t%f\t%f\t%f\t%f\t%f\t%f\n', ...
        ov_allunits{nc}{1}, ov_allunits{nc}{2}, ...
        nfiles_con(nc), nfiles_mlnoise(nc), ...
        zscore_con(nc), zscore_mlnoise(nc), stdz_con(nc), stdz_mlnoise(nc), ...
        dprime_con(nc), dprime_mlnoise(nc), stdd_con(nc), stdd_mlnoise(nc), ...
        p_con(nc), p_mlnoise(nc), rank_con(nc), rank_mlnoise(nc), ...
        info_con(nc), info_mlnoise(nc), noiseinfo_con(nc), noiseinfo_mlnoise(nc), rateinfo_con(nc), rateinfo_mlnoise(nc));
end

fclose(fid);
