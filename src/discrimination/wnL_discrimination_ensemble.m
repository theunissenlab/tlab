function [n_ensemble, output_ensemble, output_single]=...
    wnL_discrimination_ensemble(n_ensemble)

% set up path
addpath(genpath('/auto/k2/share/matlab/fet/Neural Discrimination'))
addpath(genpath('/auto/k2/share/matlab/fet/P Data Base Tools'))

% Runs the neural discrimination for white noise reared animals.  L

%n_ensemble = 3;
brainregion = 'wnL'; %NEED TO ADD THIS DATABASE TO dataCD_Feb09 directory in pgill's account
stimtype = 'conspecific';
%These are names of cells that I had "good" STRFs for wn birds

wn_allunits = { ...
    {'wnmale1', '5' }, ... %wnmale1 is 90 days old
    {'wnmale1', '6' }, ... %wnmale1 is 90 days old
    {'wnmale4', '9' }, ... 
    {'wnmale6', '8' }, ... 
    {'wnmale6', '9' }, ... 
    {'wnmale6', '10' }, ... 
    {'wnmale6', '11' }, ... 
    {'wnmale7', '11' }, ... 
    {'wnmale7', '15' }, ... 
    {'wnmale8', '1' }, ... 
    {'wnmale8', '2' }, ... 
    {'wnmale8', '3' }, ... 
    {'wnfemale1', '6' }, ... 
    {'wnfemale1', '7' }, ... 
    {'wnfemale1', '8' }, ... 
    {'wnfemale1', '9' }, ... 
    {'wnfemale4', '12' }, ... 
    {'wnfemale4', '13' }, ... 
    {'wnfemale5', '5' }, ... 
    {'wnfemale5', '7' }, ... 
    {'wnfemale5', '8' }, ... 
    {'wnfemale5', '9' }, ... 
    {'wnfemale5', '12' }, ... 
    {'wnfemale6', '5' }, ... 
    {'wnfemale6', '6' }, ... 
    {'wnfemale7', '13' }, ... 
    {'wnfemale8', '6' }};
    %{'wnfemale3', '5' }, ... %wnfemale3 is 8 months old
    %{'wnfemale3', '7' }, ... %wnfemale3 is 8 months old
    %{'wnfemale3', '8' }, ... %wnfemale3 is 8 months old
    %{'wnfemale3', '11' }}; %wnfemale3 is 8 months old

number_cells = length(wn_allunits);

if (n_ensemble > number_cells)
    fprintf(1,'Number of cells in ensemble %d greater than the number of cells in database %d\n', n_ensemble, number_cells);
    n_ensemble = number_cells;
end

% Obtain a permutation of n_ensemble neurons
%n_choose = 1:n_ensemble; 
n_choose = randperm(number_cells);

clear cellid
for i=1:n_ensemble
    cellid(i).birdname = wn_allunits{n_choose(i)}{1};
    cellid(i).cellname = wn_allunits{n_choose(i)}{2};
    cellid(i).brainregion = brainregion;
end

output_ensemble = neural_discrimination_ensemble(cellid, stimtype, 1000, []);

for i=1:n_ensemble
    output_single(i) = neural_discrimination_ensemble(cellid(i), stimtype, output_ensemble.maxrep, output_ensemble.stim_names);
end

save wnL_ensemble_neural_discrimination.mat cellid output_ensemble output_single;

disp('Ensemble percent correct:')
disp(output_ensemble.percorrectB)

disp('Single percent correct:')
disp([output_single.percorrectB])

disp('Ensemble MI:')
disp(output_ensemble.mizdistSB)

disp('Single MI:')
disp([output_single.mizdistSB])
