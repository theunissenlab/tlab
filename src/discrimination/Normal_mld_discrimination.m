% Runs the neural discrimination for normal mld
brainregion = 'maybe_mld';
fname = 'mld.mat';

% All the data files pasted from the Excel file
mld_normal = { ...
{'gg0304', '4_A'}, ...
{'gg0304', '6_A'}, ...
{'gg0304', '8_A'}, ...
{'gg0304', '9_A'}, ...
{'gg0304', '10_A'}, ...
{'gg0304', '11_A'}, ...
{'gg0304', '12_A'}, ...
{'gg0304', '15_A'}, ...
{'pipu0617', '2_A'}, ...
{'pipu0617', '3_A'}, ...
{'pipu0617', '5_A'}, ...
{'pipu0617', '6_A'}, ...
{'pipu0617', '7_A'}, ...
{'pipu0617', '8_A'}, ...
{'pipu0617', '10_A'}, ...
{'yg0331', '1_A'}, ...
{'yg0331', '2_A'}, ...
{'yg0331', '3_A'}, ...
{'yg0331', '4_A'}, ...
{'yg0331', '5_A'}, ...
{'yg0331', '6_A'}, ...
{'yg0331', '7_A'}, ...
{'yg0331', '8_A'}, ...
{'yg0331', '9_A'}, ...
{'yg0331', '10_A'}, ... 
{'yr2727', '3_A'}, ... 
{'yr2727', '4_A'}, ... 
{'yr2727', '5_A'}, ... 
{'yr2727', '6_A'}, ... % {'yy0304', '3_A'}, ... 
{'yy0304', '5_A'}, ... 
{'yy0304', '6_A'}, ...
{'blahpi0303', '5_A'}, ...
{'blahpi0303', '6_A'}, ...
{'blahpi0303', '7_A'}, ...
{'blahpi0303', '8_A'}, ...
{'blahpi0303', '9_A'}, ...
{'blahpi0303', '10_A'}, ...
{'publu0717', '2_A'}, ...
{'publu0717', '3_A'}, ...
{'publu0717', '4_A'}, ...
{'publu0717', '5_A'}, ...
{'publu0717', '6_A'}, ...
{'publu0717', '7_A'}, ...
{'publu0717', '8_A'}, ...
{'publu0717', '9_A'}, ...
{'publu0717', '10_A'}, ...
{'publu0717', '11_A'}, ...
{'publu0717', '12_A'}, ... 
{'lghp1616', '4_A'}, ...
{'lghp1616', '5_A'}, ...
{'lghp1616', '6_A'}, ...
{'lghp1616', '7_A'}, ...
{'lghp1616', '8_A'}, ...
{'lghp1616', '9_A'}, ...
{'lghp1616', '10_A'}, ...
{'pipu1018', '1_A'}, ...
{'pipu1018', '2_A'}, ...
{'pipu1018', '3_A'}, ...
{'pipu1018', '4_A'}, ...
{'pipu1018', '5_A'}, ...
{'pipu1018', '6_A'}, ...
{'pipu1018', '7_A'}, ...
{'pipu1018', '8_A'}, ...
{'pipu1018', '9_A'}, ...
{'pipu1018', '10_A'}, ...
{'pipu1018', '11_A'} };

% Allocate space for output values
number_cells = length(mld_normal);


% Allocate file names for the temp results
%done_bengalese_name = cell(1,number_cells);
done_con_name = cell(1,number_cells);
%done_mlnoise_name = cell(1,number_cells);

for nc=1:number_cells
    %stimtype = 'bengalese';
    %done_bengalese_name{nc} = sprintf('%s_%s_%s_%s.mat' , mld_normal{nc}{1}, brainregion, mld_normal{nc}{2}, stimtype);
    stimtype = 'conspecific';
    done_con_name{nc} = sprintf('%s_%s_%s_%s.mat' , mld_normal{nc}{1}, brainregion, mld_normal{nc}{2}, stimtype);
    %stimtype = 'flatrip';
    %done_mlnoise_name{nc} = sprintf('%s_%s_%s_%s.mat' , mld_normal{nc}{1}, brainregion, mld_normal{nc}{2}, stimtype);
end

not_done = 1;
n_loop = 0;
njobs = 0;
% Add jobs to queue until done
while not_done
    not_done = 0;
    for nc=1:number_cells
        %stimtype = 'bengalese';
        %if (exist(done_bengalese_name{nc},'file') == 0)
        %    the_command = sprintf('cd(''/auto/fhome/smunro/matlab/Neural Discrimination''); neural_discrimination_queue(''%s'', ''%s'', ''%s'', ''%s'')', mld_normal{nc}{1}, brainregion, mld_normal{nc}{2}, stimtype);
        %    the_comment = sprintf('ND%s%s%s%s',mld_normal{nc}{1}, brainregion, mld_normal{nc}{2}, stimtype);
        %    njobs = njobs +1;
        %    qid_submitted(njobs) = dbaddqueuemaster(the_command, the_comment);
        %    not_done = 1;
        %    if n_loop
        %        fprintf(1, 'Job %s not finished after loop %d\n', the_comment, n_loop);
        %    end
        %end
        stimtype = 'conspecific';
        if (exist(done_con_name{nc},'file') == 0)
            the_command = sprintf('cd(''/auto/fhome/smunro/matlab/Neural Discrimination/''); neural_discrimination_queue(''%s'', ''%s'', ''%s'', ''%s'')', mld_normal{nc}{1}, brainregion, mld_normal{nc}{2}, stimtype);
            the_comment = sprintf('ND%s%s%s%s',mld_normal{nc}{1}, brainregion, mld_normal{nc}{2}, stimtype);
            njobs = njobs +1;
            qid_submitted(njobs) = dbaddqueuemaster(the_command, the_comment);
            not_done = 1;
            if n_loop
                fprintf(1, 'Job %s not finished after loop %d\n', the_comment, n_loop);
            end
        end
        %stimtype = 'flatrip';
        %if (exist(done_mlnoise_name{nc},'file') == 0)
        %    the_command = sprintf('cd(''/auto/fhome/smunro/matlab/Neural Discrimination''); neural_discrimination_queue(''%s'', ''%s'', ''%s'', ''%s'')', mld_normal{nc}{1}, brainregion, mld_normal{nc}{2}, stimtype);
        %    the_comment = sprintf('ND%s%s%s%s',mld_normal{nc}{1}, brainregion, mld_normal{nc}{2}, stimtype);
        %    njobs = njobs +1;
        %    qid_submitted(njobs) = dbaddqueuemaster(the_command, the_comment);
        %    not_done = 1;
        %    if n_loop
        %        fprintf(1, 'Job %s not finished after loop %d\n', the_comment, n_loop);
        %    end
        %end
    end

    if not_done
        pause(40*60); % pause for 40 minutes
    end
    n_loop = n_loop +1;
end

% Clean the queue
for ij=1:njobs
    silent_dbdeletequeue(qid_submitted(ij));
end

% Make a single data base
% Print the results to a text file
%nstim = 3;
nstim = 1;
%stim_type = {'bengalese', 'conspecific', 'flatrip'};
stim_type = {'conspecific'};
all_outputs = cell(number_cells, nstim);

for nc=1:number_cells
    %load(done_bengalese_name{nc});
    %all_outputs{nc,1} = outputs;
    
    load(done_con_name{nc});
    all_outputs{nc,2} = outputs;
    
    %load(done_mlnoise_name{nc});
    %all_outputs{nc,3} = outputs;
end
save(fname, 'nstim', 'stim_type', 'mld_normal', 'all_outputs');

