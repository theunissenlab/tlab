% Runs the neural discrimination for normal L
brainregion = 'maybe_L';
fname = 'zfnormal_fieldL.mat';



% All the data files pasted from the Excel file
fieldL_normal = { ...
     {'yy0304', '3_B' }, ... 
     {'blahpi0303', '5_B'}, ...
     {'blahpi0303', '7_B' }, ...
     {'blahpi0303', '8_B' }, ...
     {'blahpi0303', '9_B' }, ...
     {'blahpi0303', '10_B' }, ...
    {'publu0717', '3_B' }, ...
    {'publu0717', '6_B' }, ...
    {'publu0717', '7_B' }, ...
    {'publu0717', '9_B' }, ...
    {'lghp1616', '4_B' }, ...
    {'lghp1616', '5_B' }, ...
    {'lghp1616', '6_B' }, ...
    {'lghp1616', '7_B' }, ...
    {'lghp1616', '8_B' }, ...
    {'lghp1616', '9_B' }, ...
    {'lghp1616', '10_B' }, ...
    {'pipu1018', '1_B' }, ... 
    {'pipu1018', '2_B' }, ... 
    {'pipu1018', '3_B' }, ...
    {'pipu1018', '4_B' }, ...
    {'pipu1018', '6_B' }, ...
    {'pipu1018', '7_B' }, ...
    {'pipu1018', '11_B' }, ... 
    {'lblb0808', '3_B' }, ...
    {'gg0304', '4_B' }, ...
    {'gg0304', '6_B' }, ...
    {'gg0304', '8_B' }, ...
    {'gg0304', '9_B' }, ...
    {'gg0304', '10_B' }, ...
    {'pipu0617', '3_B' }, ...
    {'pipu0617', '4_B' }, ...
    {'pipu0617', '5_B' }, ...
    {'pipu0617', '7_B' }, ...
    {'pipu0617', '8_B' }, ...
    {'pipu0617', '9_B' }, ...
    {'pipu0617', '10_B' }, ...
    {'yg0111', '2_B' }, ...
    {'yg0111', '3_B' }, ...
    {'yg0111', '4_B' }, ...
    {'yg0111', '5_B' }, ...
    {'yg0111', '6_B' }, ...
    {'yg0111', '7_B' }, ...
    {'yg0111', '8_B' }, ...
    {'yg0111', '9_B' }, ...
    {'yg0111', '10_B' }, ...
    {'yg0331', '2_B' }, ...
    {'yg0331', '3_B' }, ...
    {'yg0331', '4_B' }, ...
    {'yg0331', '5_B' }, ...
    {'yg0331', '8_B' }, ...
    {'yg0331', '9_B' }, ...
    {'yg0331', '10_B' }, ...
    {'yg0616', '8_B' }, ...
    {'yg0616', '9_B' }, ...
    {'yg0616', '10_B' }, ...
    {'yg0616', '11_B' }, ...
    {'yg0616', '12_B' }, ...
    {'blublu9394', '2_B' }, ...
    {'blublu9394', '3_B' }, ...
    {'blublu9394', '4_B' }, ...
    {'blublu9394', '5_B' }, ...
    {'blublu9394', '7_B' }, ...
    {'blahpi0808', '4_B' }, ...
    {'blahpi0808', '6_B' }, ... 
    {'blahpi0808', '7_B' } };

onB = 1;
onC = 1;
onF = 1;

number_cells = length(fieldL_normal);

sumB = struct('Bird', {}, 'Cell', {}, 'File', {}, 'Good', {}, 'Total', {});
sumC = struct('Bird', {}, 'Cell', {}, 'File', {}, 'Good', {}, 'Total', {});
sumF = struct('Bird', {}, 'Cell', {}, 'File', {}, 'Good', {}, 'Total', {});


badB ={'BadB'};
badC ={'BadC'};
badF ={'BadF'};


% Allocate file names for the temp results
done_bengalese_name = cell(1,number_cells);
done_con_name = cell(1,number_cells);
done_mlnoise_name = cell(1,number_cells);

for nc=1:number_cells
    stimtype = 'bengalese';
    [nfiles spike_times stimlen] = read_all_spikes(fieldL_normal{nc}{1}, 'maybe_L', fieldL_normal{nc}{2}, stimtype);

    for nf = 1:nfiles
        nt = length(spike_times{nf});
        sumB(onB).Bird = fieldL_normal{nc}{1};
        sumB(onB).Cell = fieldL_normal{nc}{2};
        sumB(onB).File = nf;
        sumB(onB).Good = 0;
        sumB(onB).Total = 0;
        for it = 1:nt
            if (min(spike_times{nf}{it}) < 0) 
                sumB(onB).Good = sumB(onB).Good + 1;
            end
            
            sumB(onB).Total = sumB(onB).Total + 1;
        end
        
        if (sumB(onB).Good == 0)
            badB = [badB; {strcat(sumB(onB).Bird, '_', sumB(onB).Cell, '-', num2str(sumB(onB).File))}];
        end
        onB = onB + 1;
    end
    
    stimtype = 'conspecific';
    [nfiles spike_times stimlen] = read_all_spikes(fieldL_normal{nc}{1}, 'maybe_L', fieldL_normal{nc}{2}, stimtype);
    

    for nf = 1:nfiles
        nt = length(spike_times{nf});
        sumC(onC).Bird = fieldL_normal{nc}{1};
        sumC(onC).Cell = fieldL_normal{nc}{2};
        sumC(onC).File = nf;
        sumC(onC).Good = 0;
        sumC(onC).Total = 0;
        for it = 1:nt
            if (min(spike_times{nf}{it}) < 0) 
                sumC(onC).Good = sumC(onC).Good + 1;
            end
            
            sumC(onC).Total = sumC(onC).Total + 1;
        end
        
        if (sumC(onC).Good == 0)
            badC = [badC; {strcat(sumC(onC).Bird, '_', sumC(onC).Cell, '-', num2str(sumC(onC).File))}];
        end
        
        onC = onC + 1;
    end    
    
    stimtype = 'flatrip';
    [nfiles spike_times stimlen] = read_all_spikes(fieldL_normal{nc}{1}, 'maybe_L', fieldL_normal{nc}{2}, stimtype);

    
    for nf = 1:nfiles
        nt = length(spike_times{nf});
        sumF(onF).Bird = fieldL_normal{nc}{1};
        sumF(onF).Cell = fieldL_normal{nc}{2};
        sumF(onF).File = nf;
        sumF(onF).Good = 0;
        sumF(onF).Total = 0;
        for it = 1:nt
            if (min(spike_times{nf}{it}) < 0) 
                sumF(onF).Good = sumF(onF).Good + 1;
            end
            
            sumF(onF).Total = sumF(onF).Total + 1;
        end
        
        if (sumF(onF).Good == 0)
            badF = [badF; {strcat(sumF(onF).Bird, '_', sumF(onF).Cell, '-', num2str(sumF(onF).File))}];
        end
        
        onF = onF + 1;
    end
end